@using BlazorInputFile
@rendermode InteractiveServer

<div class="container h-100 py-5">
    <div class="row h-100 justify-content-center align-items-center">
        <div class="col-6">
            <div class="dropzone @dropClass rounded">
                <BlazorInputFile.InputFile id="fileInput" multiple title=""
                           OnChange="SingleUpload"
                           accept="image/png,image/gif,image/jpeg"
                           @ondragenter="HandleDragEnter"
                           @ondragleave="HandleDragLeave" />
                <p class="text-center">Перетащите изображение сюда или выберите его на устройстве</p>
            </div>
            @if ((fileTypeError || fileSizeError || singleUploadError))
            {
                <ul class="validation-errors mb-0">
                    @if (fileTypeError)
                    {
                        <li class="validation-message">Можно загружать только изображения.</li>
                    }
                    @if (singleUploadError)
                    {
                        <li class="validation-message">Можно загрузить только одно изображение за раз.</li>
                    }
                    @if (fileSizeError)
                    {
                        <li class="validation-message">Максимальный размер изображения @MaxFileSizeMB MB.</li>
                    }
                </ul>
            }
            @if (selectedFiles != null && selectedFiles.Count > 0)
            {
                <div class="col-12">
                    <ul>
                        @foreach (var file in selectedFiles)
                        {
                            <li>
                                @file.Name
                                <button class="btn btn-link text-danger p-0 pl-1" type="button"
                                        @onclick="@(e => RemoveFile(file))">
                                    <small class="align-text-bottom">Remove</small>
                                </button>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
 
@code {
    const int MaxFileSizeMB = 5;
    const int MaxFileSize = MaxFileSizeMB * 1024 * 1024; // 5MB
    private string dropClass = "";
    private bool fileSizeError = false;
    private bool fileTypeError = false;
    private bool singleUploadError = false;
    private List<IFileListEntry> selectedFiles = new List<IFileListEntry>();

    private void HandleDragEnter()
    {
        dropClass = "dropzone-drag";
    }

    private void HandleDragLeave()
    {
        dropClass = "";
    }

    private async Task SingleUpload(IFileListEntry[] files)
    {
        dropClass = "";
        fileSizeError = false;
        fileTypeError = false;
        singleUploadError = false;

        List<string> acceptedFileTypes = new List<string>() { "image/png", "image/jpeg", "image/gif" };
        if (files != null)
        {
            if (files.Length != 1) // Нельзя загрузить больше одного файла за раз
            {
                singleUploadError = true;
                return;
            }

            foreach (var file in files)
            {

                bool error = false;
                if (file.Size > MaxFileSize)
                {
                    error = true;
                    fileSizeError = true;
                }
 
                if (!acceptedFileTypes.Contains(file.Type))
                {
                    error = true;
                    fileTypeError = true;
                }

 
                //keep the good files
                if (!error)
                {
                    selectedFiles.Add(file);
                }
            }
        }
    }
 
    private void RemoveFile(IFileListEntry file)
    {
        selectedFiles.Remove(file);
    }
}