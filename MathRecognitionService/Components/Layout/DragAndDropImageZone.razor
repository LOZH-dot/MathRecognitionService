@using BlazorInputFile
@using System.Globalization;
@inject IStringLocalizer<DragAndDropImageZone> _localizer
@rendermode InteractiveServer

<div class="dropzone @dropClass rounded">
	<BlazorInputFile.InputFile id="fileInput" multiple title=""
							   OnChange="SingleUpload"
							   accept="image/png,image/gif,image/jpeg"
							   @ondragenter="HandleDragEnter"
							   @ondragleave="HandleDragLeave" />
    <p class="text-center">@_localizer["test"]</p>
</div>

@if ((fileTypeError || fileSizeError || singleUploadError))
{
		@if (fileTypeError)
		{
			<div class="alert alert-danger my-2">
            @_localizer["fileTypeError"]
            </div>
		}
		@if (singleUploadError)
		{
            <div class="alert alert-danger my-2">
            @_localizer["singleUploadError"]
            </div>
		}
		@if (fileSizeError)
		{
            <div class="alert alert-danger my-2">
            @_localizer["fileSizeError"] @MaxFileSizeMB MB.
            </div>
		}
}
@if (selectedFiles != null && selectedFiles.Count > 0)
{
	<div class="col-12">
		<ul>
			@foreach (var file in selectedFiles)
			{
				<li>
					@file.Name
					<button class="btn btn-link text-danger p-0 pl-1" type="button"
							@onclick="@(e => RemoveFile(file))">
						<small class="align-text-bottom">Remove</small>
					</button>
				</li>
			}
		</ul>
	</div>
}
 
@code {
    const int MaxFileSizeMB = 5;
    const int MaxFileSize = MaxFileSizeMB * 1024 * 1024; // 5MB
    private string dropClass = "";
    private bool fileSizeError = false;
    private bool fileTypeError = false;
    private bool singleUploadError = false;
    private List<IFileListEntry> selectedFiles = new List<IFileListEntry>();

    private void HandleDragEnter()
    {
        dropClass = "dropzone-drag";
    }

    private void HandleDragLeave()
    {
        dropClass = "";
    }

    private async Task SingleUpload(IFileListEntry[] files)
    {
        dropClass = "";
        fileSizeError = false;
        fileTypeError = false;
        singleUploadError = false;

        List<string> acceptedFileTypes = new List<string>() { "image/png", "image/jpeg", "image/gif" };
        if (files != null)
        {
            if (files.Length != 1) // Нельзя загрузить больше одного файла за раз
            {
                singleUploadError = true;
                return;
            }

            foreach (var file in files)
            {

                bool error = false;
                if (file.Size > MaxFileSize)
                {
                    error = true;
                    fileSizeError = true;
                }
 
                if (!acceptedFileTypes.Contains(file.Type))
                {
                    error = true;
                    fileTypeError = true;
                }

 
                //keep the good files
                if (!error)
                {
                    selectedFiles.Add(file);
                }
            }
        }
    }
 
    private void RemoveFile(IFileListEntry file)
    {
        selectedFiles.Remove(file);
    }
}